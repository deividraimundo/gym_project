package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"gym_project/graph/generated"
	"gym_project/model"
)

// UpsertMuscleAssesment is the resolver for the upsertMuscleAssesment field.
func (r *mutationResolver) UpsertMuscleAssesment(ctx context.Context, data model.MuscleAssesmentInput) (int, error) {
	return r.svc.UpsertMuscleAssesment(ctx, data)
}

// DeleteMuscleAssesment is the resolver for the deleteMuscleAssesment field.
func (r *mutationResolver) DeleteMuscleAssesment(ctx context.Context, id int) (int, error) {
	return r.svc.DeleteMuscleAssesment(ctx, id)
}

// GetCurrentMuscleAssesmentByUser is the resolver for the getCurrentMuscleAssesmentByUser field.
func (r *queryResolver) GetCurrentMuscleAssesmentByUser(ctx context.Context, idUser int) (*model.MuscleAssesment, error) {
	return r.dao.GetMuscleAssesmentByUser(ctx, idUser)
}

// GetHistoryMuscleAssesmentByUser is the resolver for the getHistoryMuscleAssesmentByUser field.
func (r *queryResolver) GetHistoryMuscleAssesmentByUser(ctx context.Context, idUser int) ([]*model.MuscleAssesment, error) {
	return r.dao.SelectMuscleAssesmentByUser(ctx, idUser)
}

// GetMuscleAssesmentByID is the resolver for the getMuscleAssesmentById field.
func (r *queryResolver) GetMuscleAssesmentByID(ctx context.Context, id int) (*model.MuscleAssesment, error) {
	return r.dao.GetMuscleAssesmentByID(ctx, id)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
